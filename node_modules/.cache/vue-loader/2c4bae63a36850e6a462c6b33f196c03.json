{"remainingRequest":"/Projets/vuejs-project-dod/node_modules/vue-loader/lib/index.js??vue-loader-options!/Projets/vuejs-project-dod/src/components/Gallerie.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Projets/vuejs-project-dod/src/components/Gallerie.vue","mtime":1615127145478},{"path":"/Projets/vuejs-project-dod/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Projets/vuejs-project-dod/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Projets/vuejs-project-dod/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Projets/vuejs-project-dod/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Projets/vuejs-project-dod/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5ibG9jayB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRvcDogODBweDsKICBib3R0b206IDA7CiAgd2lkdGg6IDEwMCU7Cn0KCg=="},{"version":3,"sources":["Gallerie.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACA;AACA;AACA;AACA","file":"Gallerie.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-main>\n    <v-content id=\"block\">\n      <v-row justify=\"center\">\n      <h1 class=\"font-weight-light\">{{ $route.params.name }}</h1>\n      </v-row>\n      <v-divider inset></v-divider>\n    </v-content>\n    <v-container>\n    <masonry\n      :gutter=\"{ default: '20px', 700: '10px' }\"\n      :cols=\"{ default: 2, 1000: 2, 700: 2, 500: 1 }\"\n    >\n      <v-card\n        v-for=\"item in JSON.parse(JSON.stringify(imgsArr))\"\n        :key=\"item.id\"\n        class=\"mt-2 mb-2\"\n        color=\"blue lighten-3\"\n      >\n        <v-img :src=\"item.src\"></v-img>\n      </v-card>\n    </masonry>\n  </v-container>\n  </v-main>\n</template>\n\n<script>\nimport { mapActions, mapState } from \"vuex\";\n\nexport default {\n  components: {\n  },\n  computed: {\n    ...mapState([\"photos\", \"isLoading\", \"imgsArr\"]),\n  },\n  methods: {\n    ...mapActions([\"getPhotos\"]),\n  },\n  created() {\n    this.getPhotos(this.$route.params.id);\n    this.imgsArr.splice(0);\n  },\n};\n</script>\n\n<style>\n.block {\n  position: absolute;\n  top: 80px;\n  bottom: 0;\n  width: 100%;\n}\n\n</style>\n"]}]}